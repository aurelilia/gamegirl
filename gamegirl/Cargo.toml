[package]
name = "gamegirl"
version = "0.1.0"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lib]
crate-type = ["cdylib", "lib"]

[dependencies]
common = { path = "../common" }
ggc = { path = "../cores/ggc", optional = true }
gga = { path = "../cores/gga", optional = true }
nds = { path = "../cores/nds", optional = true }
# psx = { path = "../cores/psx", optional = true }
# nes = { path = "../cores/nes", optional = true }
log.workspace = true

gdbstub = { version = "0.7.5", optional = true }
gdbstub_arch = { version = "0.3.1", optional = true }
glow = { workspace = true, optional = true }
zip = { version = "2.5", default-features = false, optional = true, features = [
    "deflate",
    "deflate64",
    "lzma",
] }
thiserror = { version = "2.0", default-features = false }

libloading = { version = "0.8", optional = true }
notify = { version = "8.0.0", optional = true }

cpal = { version = "0.15.3", optional = true }
gilrs = { version = "0.11.0", features = ["serde-serialize"], optional = true }
serde = { workspace = true, optional = true }

[target.'cfg(target_arch = "wasm32")'.dependencies]
web-sys = { version = "0.3.77", features = ["Storage", "Window"] }
base64 = "0.22.1"

[features]
serde = [
    "common/serde",
    "ggc?/serde",
    "gga?/serde",
    "nds?/serde",
    #    "nes?/serde",
    #    "psx?/serde",
]
serde-config = ["common/serde_config"]

std = ["common/std", "gga/std", "nds/std", "dep:zip"]
zstd = ["common/zstd"]
remote-debugger = ["dep:gdbstub", "dep:gdbstub_arch", "std"]
dynamic = ["dep:libloading", "dep:notify", "std"]
frontend = ["dep:cpal", "dep:gilrs", "dep:serde", "std", "serde-config"]
